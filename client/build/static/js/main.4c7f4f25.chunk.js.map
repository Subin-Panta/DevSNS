{"version":3,"sources":["components/layout/Spinner/Spinner.module.css","axios-sns.js","store/actions/alert.js","store/actions/types.js","utils/setAuthToken.js","store/actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","store/reducers/alert.js","store/reducers/auth.js","store/reducers/profile.js","store/reducers/post.js","store/reducers/index.js","store/store.js","components/layout/Alert.js","store/actions/profile.js","components/layout/Spinner/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExp.js","components/profile/ProfileEdu.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","store/actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/posts/post/CommentForm.js","components/posts/post/Comments.js","components/posts/post/Post.js","App.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","defaults","headers","common","loadUser","a","localStorage","get","res","data","mapDispatchToProps","logout","connect","state","auth","props","authLinks","to","className","onClick","href","guestLinks","loading","isAuthenticated","register","name","email","password","config","body","JSON","stringify","post","errors","response","console","log","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","login","minLength","initialState","getItem","user","profile","profiles","repos","posts","combineReducers","alert","action","filter","setItem","removeItem","map","_id","postId","likes","comments","item","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","length","key","getCurrentProfile","statusText","status","createProfile","history","edit","push","Spinner","classes","loader","DashboardActions","deleteExperience","delete","experiences","experience","company","title","format","from","mapStateToProps","deleteEducation","educations","education","school","degree","deleteAccount","window","confirm","useEffect","Component","component","rest","render","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","setDisplaySocialInputs","formChangeHandler","socialInputs","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","disabled","checked","cols","rows","addEducation","fieldofstudy","ProfileItem","src","avatar","alt","slice","index","getProfiles","loaded","ProfileTop","rel","ProfileAbout","trim","split","ProfileExp","ProfileEdu","getGithubRepos","username","repo","html_url","full_name","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","text","date","showActions","addLike","removeLike","deletePost","defaultProps","addPost","setText","getPosts","addComment","deleteComment","commentId","comment","bind","getPost","App","exact","path","Landing","Register","Profiles","Login","Profile","Dashboard","CreateProfile","AddExperience","AddEducation","EditProfile","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c7f4f25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3U_cM\",\"load1\":\"Spinner_load1__TZAT1\"};","import axios from 'axios'\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:5000'\r\n})\r\nexport default instance\r\n","import { SET_ALERT, REMOVE_ALERT } from './types'\r\nimport { v4 as uuid } from 'uuid'\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuid()\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  })\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id\r\n      }),\r\n    timeout\r\n  )\r\n}\r\n","export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\nexport const GET_PROFILES = 'GET_PROFILES'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_POST = 'GET_POST'\r\nexport const POST_ERROR = 'POST_ERROR'\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const GET_SINGLE_POST = 'GET_SINGLE_POST'\r\nexport const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'\r\n","import axios from '../axios-sns'\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token']\r\n  }\r\n}\r\n\r\nexport default setAuthToken\r\n","import axios from '../../axios-sns'\r\nimport { setAlert } from './alert'\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types'\r\nimport setAuthToken from '../../utils/setAuthToken'\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token)\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth')\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    })\r\n  }\r\n}\r\n//REGISTER USER\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ name, email, password })\r\n  try {\r\n    const res = await axios.post('api/users', body, config)\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    })\r\n    dispatch(loadUser())\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    console.log(errors)\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n}\r\n//login user\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ email, password })\r\n  try {\r\n    const res = await axios.post('api/auth', body, config)\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    })\r\n    dispatch(loadUser())\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    })\r\n  }\r\n}\r\n//LOGOUT /clear Profile\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE })\r\n  dispatch({ type: LOGOUT })\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../../store/actions/auth'\r\nconst Navbar = props => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user'></i>{' '}\r\n          <span className='hide-sm'>DashBoard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt'></i>{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n      <li></li>\r\n    </ul>\r\n  )\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  )\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'>DevSNS</i>\r\n        </Link>\r\n      </h1>\r\n      {!props.auth.loading && (\r\n        <Fragment>\r\n          {props.auth.isAuthenticated ? authLinks : guestLinks}\r\n        </Fragment>\r\n      )}\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  logout\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nconst Landing = props => {\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to='/dashboard' />\r\n  }\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create developer profile/porofolio,share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/Login' className='btn'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { setAlert } from '../../store/actions/alert'\r\nimport { register } from '../../store/actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Register = props => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  })\r\n\r\n  const { name, email, password, password2 } = formData\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (password !== password2) {\r\n      props.setAlert('Passwords Do Not Match', 'danger')\r\n    } else {\r\n      props.register({ name, email, password })\r\n    }\r\n  }\r\n  //Redirect\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to='/dashboard' />\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Create Your account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            name='name'\r\n            type='text'\r\n            placeholder='Name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            name='email'\r\n            type='email'\r\n            placeholder='Email Address'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar, so if you want a profile image use a\r\n            Gravatar Email\r\n          </small>\r\n\r\n          <div className='form-group'>\r\n            <input\r\n              name='password'\r\n              type='password'\r\n              placeholder='Password'\r\n              value={password}\r\n              onChange={e => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              name='password2'\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              value={password2}\r\n              onChange={e => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <input type='submit' value='Register' className='btn btn-primary' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign in</Link>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\nconst mapStatetoProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nconst mapDispatchToProps = {\r\n  setAlert,\r\n  register\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Register)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../store/actions/auth'\r\nconst Login = props => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const { email, password } = formData\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    props.login(email, password)\r\n  }\r\n  //Redirect if logged in\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to='/dashboard' />\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Sign Into Your account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            name='email'\r\n            type='email'\r\n            placeholder='Email Address'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n\r\n          <div className='form-group'>\r\n            <input\r\n              name='password'\r\n              type='password'\r\n              placeholder='Password'\r\n              minLength='6'\r\n              value={password}\r\n              onChange={e => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <input type='submit' value='Login' className='btn btn-primary' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\nconst mapStatetoProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nconst mapDispatchToProps = {\r\n  login\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Login)\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\nconst initialState = []\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload]\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== action.payload)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n ","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types'\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload\r\n      }\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token)\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      }\r\n    case LOGOUT:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n    case REGISTER_FAIL:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token')\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE:\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false\r\n      }\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      }\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      }\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload,\r\n        loading: false\r\n      }\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_SINGLE_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types'\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n}\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      }\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      }\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === action.payload.postId\r\n            ? { ...post, likes: action.payload.likes }\r\n            : post\r\n        ),\r\n        loading: false\r\n      }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== action.payload.postId),\r\n        loading: false\r\n      }\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n        loading: false\r\n      }\r\n    case GET_SINGLE_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        loading: false\r\n      }\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: action.payload },\r\n        loading: false\r\n      }\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            item => item._id !== action.payload\r\n          )\r\n        },\r\n        loading: false\r\n      }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport post from './post'\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/index'\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Alert = props =>\r\n  props.alerts !== null &&\r\n  props.alerts.length > 0 &&\r\n  props.alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      <h1>{alert.msg}</h1>\r\n    </div>\r\n  ))\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n}\r\nconst mapStatetoProps = state => ({\r\n  alerts: state.alert\r\n})\r\nexport default connect(mapStatetoProps)(Alert)\r\n","import axios from '../../axios-sns'\r\nimport { setAlert } from './alert'\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from './types'\r\n\r\n//GET CURRENT USERS PROFILE\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('api/profile/me')\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n//GET ALL PROFILES\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE })\r\n  try {\r\n    const res = await axios.get('api/profile/')\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n//GET PROFILE BY ID\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`api/profile/user/${userId}`)\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n//GET GITHUB REPOS\r\nexport const getGithubRepos = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`api/profile/github/${username}`)\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n//CREATE OR UPDATE A  PROFILE\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const res = await axios.post('/api/profile', formData, config)\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'))\r\n    if (!edit) {\r\n      history.push('/dashboard')\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n//ADD EXPERIENCE\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const res = await axios.put('/api/profile/experience', formData, config)\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Experience Added', 'success'))\r\n    history.push('/dashboard')\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n//ADD EDUCATION\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const res = await axios.put('/api/profile/education', formData, config)\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Education Added', 'success'))\r\n    history.push('/dashboard')\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n//Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`)\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Experience Removed', 'danger'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n//Delete education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`)\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Education Removed', 'danger'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n//DELETE ACCOUNT AND PROFILE\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm('Are you sure? This cannot be reversed')) {\r\n    try {\r\n      await axios.delete(`/api/profile/`)\r\n      dispatch({ type: CLEAR_PROFILE })\r\n      dispatch({ type: ACCOUNT_DELETED })\r\n      dispatch(setAlert('Your Account Has Been Removed Permanently', 'danger'))\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\nexport const Spinner = () => {\r\n  return <div className={classes.loader}>Loading</div>\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn'>\r\n        <i className='fas fa-user-circle'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn'>\r\n        <i className='fa fa-black-tie'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn'>\r\n        <i className='fas fa-graduation-cap'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteExperience } from '../../store/actions/profile'\r\nimport { connect } from 'react-redux'\r\nconst Experience = props => {\r\n  const experiences = props.experience.map(item => (\r\n    <tr key={item._id}>\r\n      <td>{item.company}</td>\r\n      <td className='hide-sm'>{item.title}</td>\r\n      <td className='hide-sm'>\r\n        <Moment format='YYYY/MM/DD'>{item.from}</Moment>-{' '}\r\n        {item.to ? <Moment format='YYYY/MM/DD'>{item.to}</Moment> : 'Now'}\r\n      </td>\r\n      <td>\r\n        <button\r\n          className='btn btn-danger'\r\n          onClick={() => props.deleteExperience(item._id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th>Remove</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deleteExperience\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Experience)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { deleteEducation } from '../../store/actions/profile'\r\nconst Education = props => {\r\n  const educations = props.education.map(item => (\r\n    <tr key={item._id}>\r\n      <td>{item.school}</td>\r\n      <td className='hide-sm'>{item.degree}</td>\r\n      <td className='hide-sm'>\r\n        {' '}\r\n        <Moment format='YYYY/MM/DD'>{item.from}</Moment> -{' '}\r\n        {item.to ? <Moment format='YYYY/MM/DD'>{item.to}</Moment> : 'Now'}\r\n      </td>\r\n      <td>\r\n        <button\r\n          className='btn btn-danger'\r\n          onClick={() => props.deleteEducation(item._id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th>Remove</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = {\r\n  deleteEducation\r\n}\r\nexport default connect(null, mapStateToProps)(Education)\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile, deleteAccount } from '../../store/actions/profile'\r\nimport { Spinner } from '../layout/Spinner/Spinner'\r\nimport { DashboardActions } from './DashboardActions'\r\nimport Experience from './Experience'\r\nimport Education from './Education'\r\n\r\nconst Dashboard = props => {\r\n\tuseEffect(() => {\r\n\t\tprops.getCurrentProfile()\r\n\t}, [])\r\n\treturn props.profile.loading && props.profile.profile === null ? (\r\n\t\t<Spinner />\r\n\t) : (\r\n\t\t<Fragment>\r\n\t\t\t{console.log('rendered once and redirected')}\r\n\t\t\t<h1 className='large text-primary'>Dashboard</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t<i className='fas fa-user text-primary'></i>Welcome{' '}\r\n\t\t\t\t{props.auth.user && props.auth.user.name}\r\n\t\t\t</p>\r\n\t\t\t{props.profile.profile !== null ? (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<DashboardActions />\r\n\t\t\t\t\t<Experience experience={props.profile.profile.experience} />\r\n\t\t\t\t\t<Education education={props.profile.profile.education} />\r\n\t\t\t\t\t<div className='my-2'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t\tonClick={() => props.deleteAccount()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-user-minus'></i> Delete My Account\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<p> Create Your Profile :)</p>\r\n\t\t\t\t\t<Link to='/create-profile' className='btn btn-primary my-1'>\r\n\t\t\t\t\t\tCreate Profile\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nDashboard.propTypes = {\r\n\tgetCurrentProfile: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tdeleteAccount: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\tprofile: state.profile\r\n})\r\nconst mapDispatchToProps = {\r\n\tgetCurrentProfile,\r\n\tdeleteAccount\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n\t<Route\r\n\t\t{...rest}\r\n\t\trender={props => {\r\n\t\t\tconsole.log(!auth.isAuthenticated && !auth.loading)\r\n\t\t\treturn !auth.isAuthenticated && !auth.loading ? (\r\n\t\t\t\t<Redirect to='/login' />\r\n\t\t\t) : (\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t)\r\n\t\t}}\r\n\t/>\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n\tauth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n})\r\nexport default connect(mapStateToProps)(PrivateRoute)\r\n","import React, { useState, Fragment } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile } from '../../store/actions/profile'\r\nconst CreateProfile = props => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n    \r\n  })\r\n  const [displaySocialInputs, setDisplaySocialInputs] = useState(false)\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n  const formChangeHandler = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  }\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    props.createProfile(formData, props.history)\r\n  }\r\n  const socialInputs = (\r\n    <Fragment>\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-twitter fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Twitter URL'\r\n          name='twitter'\r\n          value={twitter}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-facebook fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Facebook URL'\r\n          name='facebook'\r\n          value={facebook}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-youtube fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='YouTube URL'\r\n          name='youtube'\r\n          value={youtube}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-linkedin fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Linkedin URL'\r\n          name='linkedin'\r\n          value={linkedin}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-instagram fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Instagram URL'\r\n          name='instagram'\r\n          value={instagram}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required fields</small>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={formChangeHandler}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={formChangeHandler}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-light'\r\n            onClick={() => setDisplaySocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs ? socialInputs : null}\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createProfile\r\n}\r\nexport default connect(null, mapDispatchToProps)(withRouter(CreateProfile))\r\n","import React, { useState, Fragment, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile, getCurrentProfile } from '../../store/actions/profile'\r\n\r\nconst EditProfile = props => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  })\r\n  const [displaySocialInputs, setDisplaySocialInputs] = useState(false)\r\n  useEffect(() => {\r\n    props.getCurrentProfile()\r\n    setFormData({\r\n      ...formData,\r\n      company:\r\n        props.profile.loading || !props.profile.profile.company\r\n          ? ''\r\n          : props.profile.profile.company,\r\n      website:\r\n        props.profile.loading || !props.profile.profile.website\r\n          ? ''\r\n          : props.profile.profile.website,\r\n      location:\r\n        props.profile.loading || !props.profile.profile.location\r\n          ? ''\r\n          : props.profile.profile.location,\r\n      status:\r\n        props.profile.loading || !props.profile.profile.status\r\n          ? ''\r\n          : props.profile.profile.status,\r\n      skills:\r\n        props.profile.loading || !props.profile.profile.skills\r\n          ? ''\r\n          : props.profile.profile.skills.join(','),\r\n      githubusername:\r\n        props.profile.loading || !props.profile.profile.githubusername\r\n          ? ''\r\n          : props.profile.profile.githubusername,\r\n      bio:\r\n        props.profile.loading || !props.profile.profile.bio\r\n          ? ''\r\n          : props.profile.profile.bio,\r\n      twitter:\r\n        props.profile.loading || !props.profile.profile.social\r\n          ? ''\r\n          : props.profile.profile.social.twitter,\r\n      facebook:\r\n        props.profile.loading || !props.profile.profile.social\r\n          ? ''\r\n          : props.profile.profile.social.facebook,\r\n      linkedin:\r\n        props.profile.loading || !props.profile.profile.social\r\n          ? ''\r\n          : props.profile.profile.social.linkedin,\r\n      youtube:\r\n        props.profile.loading || !props.profile.profile.social\r\n          ? ''\r\n          : props.profile.profile.social.youtube,\r\n      instagram:\r\n        props.profile.loading || !props.profile.profile.social\r\n          ? ''\r\n          : props.profile.profile.social.instagram\r\n    })\r\n  }, [props.profile.loading])\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n  const formChangeHandler = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  }\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    props.createProfile(formData, props.history, true)\r\n  }\r\n  const socialInputs = (\r\n    <Fragment>\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-twitter fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Twitter URL'\r\n          name='twitter'\r\n          value={twitter}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-facebook fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Facebook URL'\r\n          name='facebook'\r\n          value={facebook}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-youtube fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='YouTube URL'\r\n          name='youtube'\r\n          value={youtube}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-linkedin fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Linkedin URL'\r\n          name='linkedin'\r\n          value={linkedin}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group social-input'>\r\n        <i className='fab fa-instagram fa-2x'></i>\r\n        <input\r\n          type='text'\r\n          placeholder='Instagram URL'\r\n          name='instagram'\r\n          value={instagram}\r\n          onChange={formChangeHandler}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required fields</small>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={formChangeHandler}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={formChangeHandler}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={formChangeHandler}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n        <div className='my-2'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-light'\r\n            onClick={() => setDisplaySocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs ? socialInputs : null}\r\n        <input type='submit' className='btn btn-primary ' />\r\n\r\n        <button className='btn btn-light my-1'>\r\n          <Link to='/dashboard'>Go Back</Link>\r\n        </button>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\nconst mapDispatchToProps = {\r\n  createProfile,\r\n  getCurrentProfile\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(EditProfile))\r\n","import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../../store/actions/profile'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nconst AddExperience = props => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  })\r\n  const [toDateDisabled, toggleDisabled] = useState(false)\r\n  const { company, title, location, from, to, current, description } = formData\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          props.addExperience(formData, props.history)\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={company}\r\n            onChange={onChange}\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={location}\r\n            onChange={onChange}\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>* From Date</h4>\r\n          <input value={from} onChange={onChange} type='date' name='from' />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            value={to}\r\n            onChange={onChange}\r\n            type='date'\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current })\r\n                toggleDisabled(!toDateDisabled)\r\n              }}\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            value={description}\r\n            onChange={onChange}\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link to='/dashboard' className='btn my-1'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addExperience\r\n}\r\nexport default connect(null, mapDispatchToProps)(withRouter(AddExperience))\r\n","import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addEducation } from '../../store/actions/profile'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nconst AddEducation = props => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  })\r\n  const [toDateDisabled, toggleDisabled] = useState(false)\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description\r\n  } = formData\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-graduation-cap'></i> Add any school, bootcamp, etc\r\n        that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          props.addEducation(formData, props.history)\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={degree}\r\n            onChange={onChange}\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={fieldofstudy}\r\n            onChange={onChange}\r\n            type='text'\r\n            placeholder='* Field Of Study'\r\n            name='fieldofstudy'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>* From Date</h4>\r\n          <input value={from} onChange={onChange} type='date' name='from' />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            value={to}\r\n            onChange={onChange}\r\n            type='date'\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current })\r\n                toggleDisabled(!toDateDisabled)\r\n              }}\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n            />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            value={description}\r\n            onChange={onChange}\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link to='/dashboard' className='btn my-1'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addEducation\r\n}\r\nexport default connect(null, mapDispatchToProps)(withRouter(AddEducation))\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProfileItem = props => {\r\n  return (\r\n    <Fragment>\r\n      <div className='profile bg-light'>\r\n        <img className='round-img' src={props.profile.user.avatar} alt='' />\r\n        <div>\r\n          <h2>{props.profile.user.name}</h2>\r\n          <p>\r\n            {props.profile.status}{' '}\r\n            {props.profile.company && <span> {props.profile.company}</span>}\r\n          </p>\r\n          <p>\r\n            {props.profile.location && <span>{props.profile.location} </span>}\r\n          </p>\r\n          <Link\r\n            to={`/profile/${props.profile.user._id}`}\r\n            className='btn btn-primary'\r\n          >\r\n            View Profile\r\n          </Link>\r\n        </div>\r\n        <ul>\r\n          {props.profile.skills.slice(0, 4).map((item, index) => (\r\n            <li className='text-primary' key={index}>\r\n              <i className='fas fa-check'></i>\r\n              {item}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Spinner } from '../layout/Spinner/Spinner'\r\nimport { connect } from 'react-redux'\r\nimport { getProfiles } from '../../store/actions/profile'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Profiles = props => {\r\n  useEffect(() => {\r\n    props.getProfiles()\r\n  }, [])\r\n\r\n  const loaded = (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Developers</h1>\r\n      <p className='lead'>\r\n        <i className='fab fa-connectdevelop'></i>Browse and connect with\r\n        developers\r\n      </p>\r\n      <div className='profiles'>\r\n        {props.profile.profiles.length > 0 ? (\r\n          props.profile.profiles.map(item => (\r\n            <ProfileItem key={item._id} profile={item} />\r\n          ))\r\n        ) : (\r\n          <h4>No Profiles Found</h4>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n  return props.profile.loading ? <Spinner /> : loaded\r\n}\r\n\r\nProfiles.propTypes = {\r\n  profiles: PropTypes.object,\r\n  getProfiles: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\nconst mapDispatchToProps = {\r\n  getProfiles\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profiles)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({ profile }) => {\r\n  return (\r\n    <Fragment>\r\n      <img className='round-img my-1' src={profile.user.avatar} alt='' />\r\n\r\n      <h1 className='large'>{profile.user.name}</h1>\r\n      <p className='lead'>\r\n        {profile.status} {profile.company && <span>at {profile.company}</span>}\r\n      </p>\r\n      <p>{profile.location && <span>{profile.location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {profile.website && (\r\n          <a href={profile.website} rel='noopener noreferrer' target='_blank'>\r\n            <i className='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {profile.social && profile.social.twitter && (\r\n          <a\r\n            href={profile.social.twitter}\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            <i className='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {profile.social && profile.social.facebook && (\r\n          <a\r\n            href={profile.social.facebook}\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            <i className='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {profile.social && profile.social.linkedin && (\r\n          <a\r\n            href={profile.social.linkedin}\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            <i className='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {profile.social && profile.social.instagram && (\r\n          <a\r\n            href={profile.social.instagram}\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            <i className='fab fa-instagram fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {profile.social && profile.social.youtube && (\r\n          <a\r\n            href={profile.social.youtube}\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            <i className='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileTop\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({ profile }) => {\r\n  return (\r\n    <Fragment>\r\n      {profile.bio && (\r\n        <Fragment>\r\n          <h2 className='text-primary'>\r\n            {profile.user.name.trim().split(' ')[0]}'s Bio\r\n          </h2>\r\n          <p>{profile.bio}</p>\r\n          <div className='line'></div>\r\n        </Fragment>\r\n      )}\r\n\r\n      <h2 className='text-primary'>Skill Set</h2>\r\n      <div className='skills'>\r\n        {profile.skills.map((item, index) => (\r\n          <div className='p-1' key={index}>\r\n            <i className='fas fa-check'></i> {item}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileExp = props => {\r\n  return (\r\n    <div>\r\n      <h3 className='text-dark'>{props.experience.company}</h3>\r\n      <p>\r\n        <Moment format='YYYY/MM/DD'>{props.experience.from}</Moment> -\r\n        {props.experience.to ? (\r\n          <Moment format='YYYY/MM/DD'>{props.experience.to}</Moment>\r\n        ) : (\r\n          <span>Now</span>\r\n        )}\r\n      </p>\r\n      <p>\r\n        <strong>Position: </strong> {props.experience.title}\r\n      </p>\r\n      <p>\r\n        <strong>Description: </strong>\r\n        {props.experience.description}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileExp.propTypes = {\r\n  experience: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileExp\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nconst ProfileEdu = props => {\r\n  return (\r\n    <div>\r\n      <h3>{props.education.school}</h3>\r\n      <p>\r\n        <Moment format='YYYY/MM/DD'>{props.education.from}</Moment> -\r\n        {props.education.to ? (\r\n          <Moment format='YYYY/MM/DD'>{props.education.to}</Moment>\r\n        ) : (\r\n          <span>Now</span>\r\n        )}\r\n      </p>\r\n      <p>\r\n        <strong>Degree: </strong> {props.education.degree}\r\n      </p>\r\n      <p>\r\n        <strong>Field Of Study: </strong>\r\n        {props.education.fieldofstudy}\r\n      </p>\r\n      <p>\r\n        <strong>Description: </strong>\r\n        {props.education.description}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileEdu.propTypes = {\r\n  education: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileEdu\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getGithubRepos } from '../../store/actions/profile'\r\nimport { Spinner } from '../layout/Spinner/Spinner'\r\nconst ProfileGithub = props => {\r\n  useEffect(() => {\r\n    console.log(props.username)\r\n    props.getGithubRepos(props.username)\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h2 className='text-primary my-1'>\r\n        <i className='fab fa-github'></i> Github Repos\r\n      </h2>\r\n      {props.repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        props.repos.map((repo, index) => (\r\n          <div key={index} className='repo bg-white my-1 p-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  rel='noopener noreferrer'\r\n                  target='_blank'\r\n                >\r\n                  {repo.full_name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  getGithubRepos: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n})\r\nconst mapDispatchToProps = {\r\n  getGithubRepos\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileGithub)\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Spinner } from '../layout/Spinner/Spinner'\r\nimport { getProfileById } from '../../store/actions/profile'\r\nimport { Link } from 'react-router-dom'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExp from './ProfileExp'\r\nimport ProfileEdu from './ProfileEdu'\r\nimport ProfileGithub from './ProfileGithub'\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id)\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log(profile)}\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn '>\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <div className='profile-top bg-primary p-2'>\r\n              <ProfileTop profile={profile} />\r\n            </div>\r\n            <div className='profile-about bg-light p-2'>\r\n              <ProfileAbout profile={profile} />\r\n            </div>\r\n\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experiences</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map(experience => (\r\n                    <ProfileExp key={experience._id} experience={experience} />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map(education => (\r\n                    <ProfileEdu key={education._id} education={education} />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className='profile-github'>\r\n              {profile.githubusername && (\r\n                <ProfileGithub username={profile.githubusername} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nProfile.propTypes = {}\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  getProfileById\r\n}\r\nProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  getProfileById: PropTypes.func.isRequired\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { addLike, removeLike, deletePost } from '../../store/actions/post'\r\nconst PostItem = props => (\r\n  <div className='post bg-white my-1 p-1'>\r\n    <div>\r\n      <Link to={`/profile/${props.post.user}`}>\r\n        <img className='round-img' src={props.post.avatar} alt='' />\r\n        <h4>{props.post.name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{props.post.text}</p>\r\n      <p className='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{props.post.date}</Moment>\r\n      </p>\r\n      {props.showActions && (\r\n        <Fragment>\r\n          <span className='comment-count'> {props.post.likes.length}</span>{' '}\r\n          <button className='btn' onClick={() => props.addLike(props.post._id)}>\r\n            <i className='fas fa-thumbs-up'></i>\r\n          </button>\r\n          <button\r\n            className='btn'\r\n            onClick={() => props.removeLike(props.post._id)}\r\n          >\r\n            <i className='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${props.post._id}`} className='btn btn-primary'>\r\n            Discussion{' '}\r\n            <span className='comment-count'>{props.post.comments.length}</span>\r\n          </Link>\r\n          {!props.auth.loading && props.post.user === props.auth.user._id && (\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger'\r\n              onClick={() => props.deletePost(props.post._id)}\r\n            >\r\n              <i className='fas fa-times' />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n)\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n}\r\nconst mapstateToProps = state => ({\r\n  auth: state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  addLike,\r\n  removeLike,\r\n  deletePost\r\n}\r\nexport default connect(mapstateToProps, mapDispatchToProps)(PostItem)\r\n","import {\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_SINGLE_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types'\r\nimport axios from '../../axios-sns'\r\nimport { setAlert } from './alert'\r\n\r\n//GET POSTS\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('api/posts')\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n//GET SINGLE POST\r\nexport const getPost = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`api/posts/${postId}`)\r\n    dispatch({\r\n      type: GET_SINGLE_POST,\r\n      payload: res.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n//ADD  LIKE\r\nexport const addLike = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${postId}`)\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data }\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n//REMMOVE LIKE\r\nexport const removeLike = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${postId}`)\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data }\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n//DELETE POST\r\nexport const deletePost = postId => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/${postId}`)\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: { postId }\r\n    })\r\n    dispatch(setAlert('Post Removed', 'danger'))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n//ADD POST\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post('/api/posts', formData, config)\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Post Created', 'success'))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n//ADD COMMENT\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    )\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Comment Added', 'success'))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n//DELETE COMMENT\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`)\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId\r\n    })\r\n    dispatch(setAlert('Comment Removed', 'danger'))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status\r\n      }\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../store/actions/post'\r\nconst PostForm = props => {\r\n  const [text, setText] = useState('')\r\n  return (\r\n    <form\r\n      className='form my-1'\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        props.addPost({ text })\r\n        setText('')\r\n      }}\r\n    >\r\n      <textarea\r\n        cols='30'\r\n        rows='5'\r\n        value={text}\r\n        onChange={e => {\r\n          setText(e.target.value)\r\n        }}\r\n        placeholder='Create a Post'\r\n      ></textarea>\r\n      <input type='submit' value='Submit' className='btn btn-dark my-1'></input>\r\n    </form>\r\n  )\r\n}\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n}\r\nconst mapDispatchToProps = {\r\n  addPost\r\n}\r\nexport default connect(null, mapDispatchToProps)(PostForm)\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Spinner } from '../layout/Spinner/Spinner'\r\nimport { connect } from 'react-redux'\r\nimport { getPosts } from '../../store/actions/post'\r\nimport PostItem from './PostItem'\r\nimport PostForm from './PostForm'\r\nconst Posts = props => {\r\n  useEffect(() => {\r\n    props.getPosts()\r\n  }, [])\r\n  return props.post.loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Welcome to the Community\r\n      </p>\r\n      <div className='post-form'>\r\n        <div className='post-form-header bg-primary'>\r\n          <h3>Say Something...</h3>\r\n        </div>\r\n        <PostForm />\r\n        <div className='posts'>\r\n          {props.post.posts.map(item => (\r\n            <PostItem key={item._id} post={item} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  getPosts: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n})\r\nconst mapDispatchToProps = {\r\n  getPosts\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addComment } from '../../../store/actions/post'\r\nconst CommentForm = props => {\r\n  const [text, setText] = useState('')\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='post-form-header bg-primary'>\r\n        <h3>Leave A Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          props.addComment(props.postId, { text })\r\n          setText('')\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          value={text}\r\n          onChange={e => {\r\n            setText(e.target.value)\r\n          }}\r\n          placeholder='Comment on this post'\r\n        ></textarea>\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n}\r\nconst mapDispatchToProps = {\r\n  addComment\r\n}\r\nexport default connect(null, mapDispatchToProps)(CommentForm)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport { deleteComment } from '../../../store/actions/post'\r\nconst Comments = props => (\r\n  <div className='posts'>\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${props.comment.user}`}>\r\n          <img className='round-img' src={props.comment.avatar} alt='' />\r\n          <h4>{props.comment.name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1'>{props.comment.text}</p>\r\n        <p className='post-date'>\r\n          Posted on\r\n          <Moment format='YYYY/MM/DD'>{props.comment.date}</Moment>\r\n        </p>\r\n        {!props.auth.loading && props.comment.user === props.auth.user._id && (\r\n          <button\r\n            onClick={props.deleteComment.bind(\r\n              this,\r\n              props.postId,\r\n              props.comment._id\r\n            )}\r\n            type='button'\r\n            className='btn btn-danger'\r\n          >\r\n            <i className='fas fa-times'></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nComments.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\nconst mapDispatchToProps = {\r\n  deleteComment\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments)\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Spinner } from '../../layout/Spinner/Spinner'\r\nimport { getPost } from '../../../store/actions/post'\r\nimport PostItem from '../PostItem'\r\nimport CommentForm from './CommentForm'\r\nimport Comments from './Comments'\r\nconst Post = props => {\r\n  useEffect(() => {\r\n    props.getPost(props.match.params.id)\r\n  }, [])\r\n  return props.post.loading || props.post.post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={props.post.post} showActions={false} />\r\n      <CommentForm postId={props.post.post._id} />\r\n      {props.post.post.comments.map(item => (\r\n        <Comments key={item._id} comment={item} postId={props.post.post._id} />\r\n      ))}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n})\r\nconst mapDispatchToProps = {\r\n  getPost\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\r\n","import React, { Fragment, useEffect } from 'react'\nimport './App.css'\nimport Navbar from './components/layout/Navbar'\nimport Landing from './components/layout/Landing'\nimport { Route, Switch } from 'react-router-dom'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\n//Redux\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport Alert from './components/layout/Alert'\nimport setAuthToken from './utils/setAuthToken'\nimport { loadUser } from './store/actions/auth'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PrivateRoute from './components/routing/PrivateRoute'\nimport CreateProfile from './components/profile-form/CreateProfile'\nimport EditProfile from './components/profile-form/EditProfile'\nimport AddExperience from './components/profile-form/AddExperience'\nimport AddEducation from './components/profile-form/AddEducation'\nimport Profiles from './components/profiles/Profiles'\nimport Profile from './components/profile/Profile'\nimport Posts from './components/posts/Posts'\nimport Post from './components/posts/post/Post'\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n  return (\n    <Provider store={store}>\n      <Navbar />\n      <Fragment>\n        <Route exact path='/' component={Landing} />\n        <section className='container'>\n          <Alert />\n          <Switch>\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/profiles' component={Profiles} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/profile/:id' component={Profile} />\n            <PrivateRoute exact path='/dashboard' component={Dashboard} />\n            <PrivateRoute\n              exact\n              path='/create-profile'\n              component={CreateProfile}\n            />\n\n            <PrivateRoute\n              exact\n              path='/add-experience'\n              component={AddExperience}\n            />\n            <PrivateRoute\n              exact\n              path='/add-education'\n              component={AddEducation}\n            />\n            <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n            <PrivateRoute exact path='/posts' component={Posts} />\n            <PrivateRoute exact path='/posts/:id' component={Post} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}